Server: server0/simpleht.py (localhost:9000), server1/simpleht.py(localhost:9001), server3/simpleht.py(localhost:9002)Client: client/multi_cs.pyMount folder: client/fusemount1, client/fusemount2, client/fusemount3, client/fusemount4I Basic Operation1. Start server:Enter the servers' directory: server0, server1, server2, server3; then, run command: python simpleht.py2. Start client:Enter pocsd_project/client/Client start command:python multi_cs.py [mount point] [server address:port] [server address:port] ... [server address:port] u_id/* a."server address:port" like "http://localhost:9000"b. u_id is a int number and used as ID for each client, just give different values to different clientsc. example:*/3. Stop client:python multi_cs.py fusemount1 http://localhost:9000 http://localhost:9001 http://localhost:9002 1 python multi_cs.py fusemount2 http://localhost:9000 http://localhost:9001 http://localhost:9002 2 python multi_cs.py fusemount3 http://localhost:9000 http://localhost:9001 http://localhost:9002 3 python multi_cs.py fusemount4 http://localhost:9000 http://localhost:9001 http://localhost:9002 4Enter pocsd_project/client/If I need to stop the client with mount point: fusemount1: fusermount -u fusemount1II. Test for Single Client's Function 1. Start some servers, here I start all the three server:[under the directory of pocsd_project/]
cd server0python simpleht.py cd ../server1 python simpleht.py cd ../server2 python simpleht.py2. Start client + fusemount1 + (u_id =1)[under the directory of pocsd_project/client/]python multi_cs.py fusemount1 http://localhost:9000 http://localhost:9001 http://localhost:9002 13. Run test1.sh"client/test1.sh is used to test the mounted file system at fusemount1" [under the directory of pocsd_project/client/]./test1.sh/* results:You can see outputs of the file operations from the terminal. Besides, at the server sides, they also print some important information to illustrate the procedures the file operations*/III. Test for Multiple ClientsHere we start two client with mount points : fusemount1 + (u_id=1), fusemount2 + (u_id=2), then we run the testing file (test1.sh for fusemount1, and test2.sh for fusemount2)1. Start some servers, here I start all the three server:[under the directory of pocsd_project/]cd server0python simpleht.py
cd ../server1 python simpleht.py cd ../server2 python simpleht.py2. Start client: fusemount1 + (u_id =1), fusemount2 + (u_id=2)[under the directory of pocsd_project/]cd clientpython multi_cs.py fusemount1 http://localhost:9000 http://localhost:9001 http://localhost:9002 1 python multi_cs.py fusemount2 http://localhost:9000 http://localhost:9001 http://localhost:9002 23. Run test1.sh and test2.shopen two terminals, and both of them:[under the directory of pocsd_project/client/] run followings at the same time(using Broadcast call)(in terminal 1) ./test1.sh(in terminal 2) ./test2.sh/* from the two terminals, you can see the outcomes of file operations. Among the results, you will see reported errors, these errors are caused by double "rm" operation to the same file.Because the files have been removed by another client, so the client reports error.*/IV. Three servers + Four clients testHere, we run this system with 3 servers and 4 clients. You can enlarge the scale, but you have to add server and mount point1. Start the 3 servers[under the directory of pocsd_project/]
cd server0python simpleht.py cd ../server1 python simpleht.py cd ../server2 python simpleht.py2. Start 4 clients:[under the directory of pocsd_project/client/]python multi_cs.py fusemount1 http://localhost:9000 http://localhost:9001 http://localhost:9002 1 python multi_cs.py fusemount2 http://localhost:9000 http://localhost:9001 http://localhost:9002 2 python multi_cs.py fusemount3 http://localhost:9000 http://localhost:9001 http://localhost:9002 3 python multi_cs.py fusemount4 http://localhost:9000 http://localhost:9001 http://localhost:9002 43. Enter mount points:open 4 terminals:enter pocsd_project/client, and let the 4 terminals enter the 4 different mount points: (fusemount1, fusemount2, fusemount3, fusemount4)Then, under these mount points, you can do file operations to test our system